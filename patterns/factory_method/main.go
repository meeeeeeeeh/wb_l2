// порождающий паттерн (виртуальный конструктор)
//определяет общийинтерфейс поведения для созаваемых объектов
// имеет общий интерфейс этих объектов

//создается общая реализация создания объектов при помощи фбричного метода
//туда передается тип объекта и возвращается объект

// плюсы: избавляет  от привязки к типу
//есть общий конструктор создания на все структуры
//упрощает добавление новых объектов
//реализует принцип открытости/закрытости

//минус - все зависит от одного интерфейса

package main

import "factory_method/pkg"

var types = []string{pkg.PersnalComputerType, pkg.ServerType, pkg.NotebookType, "monoblock"}

func main() {
	for _, typeName := range types {
		computer := pkg.New(typeName)
		if computer == nil {
			continue
		}
		computer.PrintDetails()
	}
}