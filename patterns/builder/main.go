//порождающий паттерн
// позволяет создавать сложные объекты, исполльзуя "шаги"
// на каждом шаге производится часть общего объекта
//выполняя все шаги поочнреди формируется объект 

//позволяет использовать один и тот же код строительства объекта для получения разных представлений этого объекта
// -> какие то шаги можно пропустить или добавить новый
//для каждого строителя применяется общий интерфейс постройки

//плюсы:
//создание продукта пошагово
//один и тот же код для создания разных объектов
//изолируует сложный код сборки объекта и его основной бизнес логики

//минусы:
//усложныет код из-за введения дополнительных структур
//клинет будет привязан к кокретному объекту строителя



//пример - использование фабрики по производству компьютеров разных брендов
// сначала один бренд потом другой не изменяя логики производства
//у каждого бренда свой комплектовщик

package main 

import "builder/pkg"

func main() {
	asusCollector := pkg.GetCollector("asus")
	hpCollector := pkg.GetCollector("hp")

	factory := pkg.NewFactory(asusCollector)
	asusComputer := factory.CreateComputer()
	asusComputer.Print()

	factory.SetCollector(hpCollector)
	hpComputer := factory.CreateComputer()
	hpComputer.Print()

	factory.SetCollector(asusCollector)
	pc := factory.CreateComputer()
	pc.Print()
}