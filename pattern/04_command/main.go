/*
поведенческий паттерн проектирования, позволяющий заворачивать запросы
или простые операции в отдельные объекты
позволяет откладывать выполнение команд, выстраивать их в очереди,
а также хранить историю и делать отмену.

пример:
телевизор, который может быть включен 2 способами
-кнопка ВКЛ на пульте дистанционного управления
-кнопка ВКЛ на самом телевизоре

плюсы:
- позволяет разделить код который инициирует операцию от того который исполняет
- дает возможнось отмены операции
- можно добавить новые операции, не изменяя прошлый код

минусы:
- усложнение кода
*/

package main

import "command/pkg"

func main() {
	tv := &pkg.Tv{}

	onCommand := &pkg.OnCommand{
		Device: tv,
	}

	offCommand := &pkg.OffCommand{
		Device: tv,
	}

	onButton := &pkg.Button{
		Command: onCommand,
	}
	onButton.Press()

	offButton := &pkg.Button{

		Command: offCommand,
	}
	offButton.Press()
}
