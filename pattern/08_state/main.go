//поведенческий паттерн проектирования
// позволяет объектам менять поведение в зависимости от своего состояния
//извне создается впечатление что изменился весь объект
//программа может находиться в одном из нескольких состояний которые все время сменяют друг друга
//набор состояний а также переходов между ними всегда имеет окончание
//в разных состояних программа может поразному реагировать на одни события

//пример на объектах
//доумент - черновик, модерация, опубликоваться
//для каждго состояния метод опубликовать будет работать поразному
// черновик - отправит на модерацию, из модерации на публикацию (если это сделал админ), опубликоваться - ничего не делает

//создаются объекты для каждого состояния объекта
//затем вносится соответствующее поведение
//чтобы не хранить код всех состояний первоначальный объект (контекст) будет хранить ссылку на 1 из объектов состояний
//и делегировать ему работу зависящю от состояния
//тк объект состоянибудет иметь общий интерфейс контекст сможет делегировать работу не привязываясь к его классу

//плюсы
//избавляет от множества условных операторов состояний
//собирает весь код состоояния в одном месте
//упрощает код контекста

//минсы
//неоправданно усложныет код если состояний мало

//пример
//торговые автоматы
//может выдавать только один товар за раз
//имеет одно из 4 состояний
//действия - выдать предмет, добавить предмет, внести деньги, выбрать предмет

package main

import (
	"fmt"
	"log"
	"state/pkg"
)

func main() {
	vendingMachine := pkg.NewVendingMachine(2, 10)

	//запрашивается состояние - можно ли купить какой то товар
	err := vendingMachine.RequestItem()
	if err != nil {
		log.Fatalln(err.Error())
	}

	//далее добавляются дньги
	err = vendingMachine.InsertMoney(10)
	if err != nil {
		log.Fatalln(err.Error())
	}

	//выдача товара
	err = vendingMachine.DispenseItem()
	if err != nil {
		log.Fatalln(err.Error())
	}

	//внесение товара
	fmt.Println()
	err = vendingMachine.AddItem(2)
	if err != nil {
		log.Fatalln(err.Error())
	}
	fmt.Println()
	
	err = vendingMachine.RequestItem()
	if err != nil {
		log.Fatalln(err.Error())
	}
	err = vendingMachine.InsertMoney(10)
	if err != nil {
		log.Fatalln(err.Error())
	}
	err = vendingMachine.DispenseItem()
	if err != nil {
		log.Fatalln(err.Error())
	}
}